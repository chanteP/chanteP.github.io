var style = require('./style.scss');
var drawer = require('../../../../common/animator/drawer'),
    mask = require('../../../../common/components/mask'),
    dialog = require('../../../../common/components/dialog');
var base = require('../../../../lib/base');
var render = require('./render.jsx');

var cont = drawer('');

var dataAPI;

var categoryMap,
    categoryList;
var queryUrl = '/category/app',
    io = require('../io');

var categoryBackFunc;

base.insertStyle(style);

var func = {
    queryCategory : function(categoryId){
        if(!dataAPI.get('categoryId')){
            base.componentHandler.block = true;
        }
        cont.block = true;
        mask.show(9999, '品类数据请求中...');

        io.get(queryUrl, {}, function(data){
                cont.block = false;
                categoryMap = {};
                categoryList = data;
                data.forEach(function(item){
                    categoryMap[item.id] = item;
                    console.log(categoryMap);
                });
                mask.hide();
                func.render(categoryId);
            }, function(msg){
                //TODO
                cont.block = false;
                mask.hide();
                dialog().show({
                    type : 'error',
                    content : msg || '暂不支持上单，请稍后重试'
                }, true);
            });
    },
    /*获取同一个parentid下面的item*/
    getSameParent : function(list, id){
        //TODO cache
        return list.filter(function(item){
            return +item.parentId === +id;
        });
    },
    /*获取展示的二维数组*/
    getShowList : function(categoryId){
        var showList = [],
            cascadeId = [];
        var current = categoryMap[categoryId];
        if(!categoryId || !current){
            showList.push(func.getSameParent(categoryList, 0));
        }
        else{
            if(!current.leaf){
                showList.push(func.getSameParent(categoryList, categoryId));
            }
            while(current){
                showList.push(func.getSameParent(categoryList, current.parentId));
                cascadeId.unshift(current.id)
                current = categoryMap[current.parentId];
            }
            showList.reverse();
        }
        return {
            showList,
            cascadeId
        };
    },
    render : function(categoryId){
        if(!categoryList){
            // base.
            func.queryCategory(categoryId);
            return;
        }
        var {showList, cascadeId} = func.getShowList(categoryId);
        render(cont.node, showList, cascadeId);
        $('[data-node="categoryContent"]', cont.node)[0].style.height = (cont.node.clientHeight - $('[data-node="categoryDesc"]', cont.node)[0].scrollHeight - 1) + 'px';
    },
    show : function(){
        cont.show({
            title : '选择品类',
            onBack : function(){
                if(!+dataAPI.get('categoryId') && categoryBackFunc){
                    categoryBackFunc();
                }
            }
        });
        func.render(dataAPI.get('categoryId'));
    }
}

module.exports = function(dataHandler, node, editable){
    dataAPI = dataHandler;

    dataAPI.onload(function(){
        dataAPI.checkToggle('category', dataAPI.get('categoryId'), function(node){
            node.innerHTML = '<span>'+dataAPI.get('categoryName')+
                ' (费率: '+dataAPI.get('priceRate')+'%)</span>';
        });
        if(dataAPI.get('isOnline')){
            editable = false;
        }
    });
    if(!editable){
        return;
    }

    $(node).on('tap', function(){
        if(!editable){return;}
        func.show();
    });

    $(cont.node).on('tap', 'li', function(){
        var id = this.getAttribute('data-id');
        if(!id || !categoryMap[id]){
            return;
        }
        if(categoryMap[id].leaf){
            if(!categoryMap[id].support){
                dialog().show({
                    type : 'error',
                    content : '<p>该品类暂未上线，敬请期待</p><p>如需上单请到e.meituan.com发布项目</p>'
                }, true);
            }
            else{
                cont.hide();
                // console.log(categoryMap[id]);
                dataAPI.save({
                        categoryId : id + '',
                        isVoucher : !!dataAPI.get('isVoucher')
                    }, function(){
                        dataAPI.query();
                    },  function(){
                        //TODO
                    }, 
                    true);
            }
        }
        //TODO 一期兼容写法。。一期只支持二级
        else if(+categoryMap[id].level === 2 && !categoryMap[id].leaf){
            dialog().show({
                type : 'error',
                content : '暂不支持该品类的自助上单'
            }, true);
        }
        else{
            console.log('tap')
            func.render(id);
        }
    });
    return {
        show : func.show,
        setOnBack : function(backFunc){
            categoryBackFunc = backFunc;
        }
    };
}
